plot(x = 1:10, y = 2:20)
plot(x = 1:10, y = 11:20)
plot(x = 1:10, y = 11:20)
summary(cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
# Chunk 3: pressure
plot(pressure)
dplyr()
setwd
setwd("~/Downloads/OnlineNewsPopularity")
onp = read.csv(OnlineNewsPopularity.csv)
getwd()
onp = read.csv("OnlineNewsPopularity.csv")
onp1 = onp[,-1]
head(onp1)
onp1$scaledy = scale(onp1$shares, center = TRUE, scale = TRUE)
head(onp1$scaledy)
summary(onp1$scaledy)
quantile(onp_cv1[,onp1$scaledy], probs = c(0.01, 0.05, 0.1, 0.25, 0.50, 0.75, 0.90, 0.95, 1))
quantile(onp1$scaledy, probs = c(0.01, 0.05, 0.1, 0.25, 0.50, 0.75, 0.90, 0.95, 1))
onp_cv1 = onp1
for(i in 1:ncol(onp_cv1)){
q = quantile(onp_cv1[,i], probs = c(0.05,  0.95))
for (j in 1:nrow(onp_cv1)){
if(onp_cv1[j,i] > q[[2]]){
onp_cv1[j,i] = q[[2]]
}
if(onp_cv1[j,i] < q[[1]]){
onp_cv1[j,i] = q[[1]]
}
}
}
model1 = glm(shares ~ ., data = onp_cv1)
model_cv1 = cv.glm(onp_cv1, model1, K=10)
library(boot)
model_cv1 = cv.glm(onp_cv1, model1, K=10)
model_cv1$delta
model1 = glm(scaledy ~ ., data = onp_cv1)
model_cv1 = cv.glm(onp_cv1, model1, K=10)
model_cv1$delta
summary(model1)
for(i in 1:ncol(onp_cv1)){
print(colnames(onp_cv1)[i])
print(quantile(onp_cv1[,i], probs = c(0.01, 0.05, 0.1, 0.25, 0.50, 0.75, 0.90, 0.95, 1)))
}
model1 = glm(scaledy ~ abs_title_sentiment_polarity +
average_token_length +
avg_negative_polarity +
avg_positive_polarity +
factor(data_channel_is_bus) +
factor(data_channel_is_entertainment) +
global_subjectivity +
factor(is_weekend) +
kw_avg_avg +
kw_avg_max +
kw_avg_min +
LDA_02 +
LDA_03 +
LDA_04 +
num_hrefs +
num_imgs +
num_keywords +
num_videos +
self_reference_avg_sharess +
title_sentiment_polarity +
title_subjectivity,  data = onp_cv1)
summary(model1)
avg = mean(onp_cv1$shares)
var = var(onp_cv1$shares)
var
avg
n = (onp_cv1$shares - avg)\var
onp_cv1Ssc = (onp_cv1$shares - avg)\var
10\2
10/2
onp_cv1Ssc = (onp_cv1$shares - avg)/var
n = onp_cv1$shares - onp_cv1Ssc
max(n)
n = onp_cv1$scaledy - onp_cv1Ssc
max(n)
min(n)
remove(n)
head(onp_cv1Ssc)
head(onp1$scaledy)
sd = sqrt(var)
onp_cv1Ssc = (onp_cv1$shares - avg)/var
remove(n)
n = onp_cv1$scaledy - onp_cv1Ssc
head(n)
remove(onp_cv1Ssc)
onp_cv1Ssc = (onp_cv1$shares - avg)/sd
head(n)
remove(n)
n = onp_cv1$scaledy - onp_cv1Ssc
head(n)
head(onp_cv1Ssc)
max(onp_cv1$shares)
function (x, na.rm = FALSE)
{
if (is.matrix(x))
apply(x, 2, sd, na.rm = na.rm)
else if (is.vector(x))
sqrt(var(x, na.rm = na.rm))
else if (is.data.frame(x))
sapply(x, sd, na.rm = na.rm)
else sqrt(var(as.vector(x), na.rm = na.rm))
}
sd = function (x, na.rm = FALSE)
{
if (is.matrix(x))
apply(x, 2, sd, na.rm = na.rm)
else if (is.vector(x))
sqrt(var(x, na.rm = na.rm))
else if (is.data.frame(x))
sapply(x, sd, na.rm = na.rm)
else sqrt(var(as.vector(x), na.rm = na.rm))
}
sd(onp_cv1$shares)
sqrt(var)
var
onp_cv1$self_reference_min_shares = scale(onp_cv1$self_reference_min_shares)
onp_cv1$self_reference_avg_sharess = scale(onp_cv1$self_reference_avg_sharess)
head(onp_cv1$self_reference_avg_sharess)
onp_cv1$self_reference_max_shares = scale(onp_cv1$self_reference_max_shares)
onp_cv1$kw_avg_min = scale(onp_cv1$kw_avg_min)
onp_cv1$kw_avg_max = scale(onp_cv1$kw_avg_max)
onp_cv1$kw_avg_avg = scale(onp_cv1$kw_avg_avg)
model1 = glm(scaledy ~ abs_title_sentiment_polarity +
+                  average_token_length +
+                  avg_negative_polarity +
+                  avg_positive_polarity +
+                  factor(data_channel_is_bus) +
+                  factor(data_channel_is_entertainment) +
+                  global_subjectivity +
+                  factor(is_weekend) +
+                  kw_avg_avg +
+                  kw_avg_max +
+                  kw_avg_min +
+                  LDA_02 +
+                  LDA_03 +
+                  LDA_04 +
+                  num_hrefs +
+                  num_imgs +
+                  num_keywords +
+                  num_videos +
+                  self_reference_avg_sharess +
+                  title_sentiment_polarity +
+                  title_subjectivity,  data = onp_cv1)
summary(model_cv1)
summary(model1)
model_cv1 = cv.glm(onp_cv1, model1, K=10)
model_cv1$delta
max(onp_cv1$shares)
onp_cv14 = subset(onp1, shares < 1400)
onp_cv1$self_reference_max_shares = scale(onp_cv1$self_reference_max_shares)
onp_cv1$kw_avg_min = scale(onp_cv1$kw_avg_min)
onp_cv1$kw_avg_max = scale(onp_cv1$kw_avg_max)
onp_cv1$kw_avg_avg = scale(onp_cv1$kw_avg_avg)
onp_cv1$self_reference_min_shares = scale(onp_cv1$self_reference_min_shares)
onp_cv1$self_reference_avg_sharess = scale(onp_cv1$self_reference_avg_sharess)
model1 = glm(scaledy ~ abs_title_sentiment_polarity +
+                  average_token_length +
+                  avg_negative_polarity +
+                  avg_positive_polarity +
+                  factor(data_channel_is_bus) +
+                  factor(data_channel_is_entertainment) +
+                  global_subjectivity +
+                  factor(is_weekend) +
+                  kw_avg_avg +
+                  kw_avg_max +
+                  kw_avg_min +
+                  LDA_02 +
+                  LDA_03 +
+                  LDA_04 +
+                  num_hrefs +
+                  num_imgs +
+                  num_keywords +
+                  num_videos +
+                  self_reference_avg_sharess +
+                  title_sentiment_polarity +
+                  title_subjectivity,  data = onp_cv1)
model1 = glm(scaledy ~ abs_title_sentiment_polarity +
+                  average_token_length +
+                  avg_negative_polarity +
+                  avg_positive_polarity +
+                  factor(data_channel_is_bus) +
+                  factor(data_channel_is_entertainment) +
+                  global_subjectivity +
+                  factor(is_weekend) +
+                  kw_avg_avg +
+                  kw_avg_max +
+                  kw_avg_min +
+                  LDA_02 +
+                  LDA_03 +
+                  LDA_04 +
+                  num_hrefs +
+                  num_imgs +
+                  num_keywords +
+                  num_videos +
+                  self_reference_avg_sharess +
+                  title_sentiment_polarity +
+                  title_subjectivity,  data = onp_cv14)
summary(model1)
model1 = glm(scaledy ~ abs_title_sentiment_polarity +
+                  average_token_length +
+                  avg_negative_polarity +
+                  avg_positive_polarity +
+                  factor(data_channel_is_bus) +
+                  factor(data_channel_is_entertainment) +
+                  global_subjectivity +
+                  factor(is_weekend) +
+                  kw_avg_avg +
+                  kw_avg_max +
+                  kw_avg_min +
+                  LDA_02 +
+                  LDA_03 +
+                  LDA_04 +
+                  num_hrefs +
+                  num_imgs +
+                  num_keywords +
+                  num_videos +
+                  self_reference_avg_sharess +
+                  title_sentiment_polarity +
+                  title_subjectivity,  data = onp_cv1)
summary(onp_cv14)
summary(model1)
model14 = glm(scaledy ~ abs_title_sentiment_polarity +
+                  average_token_length +
+                  avg_negative_polarity +
+                  avg_positive_polarity +
+                  factor(data_channel_is_bus) +
+                  factor(data_channel_is_entertainment) +
+                  global_subjectivity +
+                  factor(is_weekend) +
+                  kw_avg_avg +
+                  kw_avg_max +
+                  kw_avg_min +
+                  LDA_02 +
+                  LDA_03 +
+                  LDA_04 +
+                  num_hrefs +
+                  num_imgs +
+                  num_keywords +
+                  num_videos +
+                  self_reference_avg_sharess +
+                  title_sentiment_polarity +
+                  title_subjectivity,  data = onp_cv14)
summary(model14)
